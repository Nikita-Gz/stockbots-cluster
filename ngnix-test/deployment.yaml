apiVersion: apps/v1
kind: Deployment
metadata:
  name: hello-deployment
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 50%
  selector:
    matchLabels:
      app: hello-pod
  template:
    metadata:
      labels:
        app: hello-pod
    spec:
      #affinity:
      #  # ⬇⬇⬇ This ensures pods will land on separate hosts
      #  podAntiAffinity:
      #    requiredDuringSchedulingIgnoredDuringExecution:
      #    - labelSelector:
      #        matchExpressions: [{ key: app, operator: In, values: [hello] }]
      #      topologyKey: "kubernetes.io/hostname"
      containers:
      - name: hello-from-container
        image: pbitty/hello-from:latest
        ports:
          - name: http
            containerPort: 80
        resources:
          limits:
            memory: "128Mi"
            cpu: "500m"
      terminationGracePeriodSeconds: 1
---
apiVersion: v1
kind: Service
metadata:
  name: hello-nodeport
spec:
  type: NodePort
  selector:
    app: hello-pod
  ports:
    - protocol: TCP
      nodePort: 31000
      port: 80
      targetPort: http 
---
kind: Service
apiVersion: v1
metadata:
  name: exampleservice
spec:
  selector:
    app: hello-pod
  ports:
  - protocol: "TCP"
    # Port accessible inside cluster
    port: 8081
    # Port to forward to inside the pod
    targetPort: 80
    # Port accessible outside cluster
    nodePort: 30002
  type: LoadBalancer
